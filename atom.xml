<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Vanney</title>
  <subtitle>Vanney</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-02T08:41:23.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Vanney</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ARRubik</title>
    <link href="http://yoursite.com/2017/12/02/ARRubik/"/>
    <id>http://yoursite.com/2017/12/02/ARRubik/</id>
    <published>2017-12-02T08:41:23.000Z</published>
    <updated>2017-12-02T08:41:23.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一次秋招</title>
    <link href="http://yoursite.com/2017/12/02/job-summary/"/>
    <id>http://yoursite.com/2017/12/02/job-summary/</id>
    <published>2017-12-02T08:17:58.000Z</published>
    <updated>2017-12-02T12:53:17.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;如题，记录一下辛苦的秋招&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂七杂八" scheme="http://yoursite.com/tags/%E6%9D%82%E4%B8%83%E6%9D%82%E5%85%AB/"/>
    
  </entry>
  
  <entry>
    <title>CALayer的时间坐标系</title>
    <link href="http://yoursite.com/2017/07/24/calayer-time-coordinate-system/"/>
    <id>http://yoursite.com/2017/07/24/calayer-time-coordinate-system/</id>
    <published>2017-07-24T02:36:58.000Z</published>
    <updated>2017-07-24T03:31:49.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;上周末，又进行了一次实验室内部的iOS分享会。这次是小学弟给我们讲的&lt;a href=&quot;https://wanston.github.io/2017/07/12/CAMediaTiming%E5%8D%8F%E8%AE%AE/&quot;&gt;CAMediaTiming&lt;/a&gt;以及&lt;a href=&quot;https://wanston.github.io/2017/07/19/RunLoop/&quot;&gt;Runloop&lt;/a&gt;的一些内容。讲的很细，也很深=。=&lt;/p&gt;
&lt;p&gt;其中提到了一点：&lt;strong&gt;CALayer的时间坐标系&lt;/strong&gt;，也就是本文要讲的主要内容&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>OC关联对象及其内存管理</title>
    <link href="http://yoursite.com/2017/07/14/association-object-and-retain-count/"/>
    <id>http://yoursite.com/2017/07/14/association-object-and-retain-count/</id>
    <published>2017-07-14T08:29:19.000Z</published>
    <updated>2017-07-17T08:12:27.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;OC的关联对象经常被用来存储Category中的属性对应的实例变量，当然它还有其他的用途。&lt;/p&gt;
&lt;p&gt;这篇文章将讨论关联对象是如何实现的，以及关联对象的内存管理问题。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>ARC下关于autorelease的一些疑问</title>
    <link href="http://yoursite.com/2017/07/13/question-about-autorelease/"/>
    <id>http://yoursite.com/2017/07/13/question-about-autorelease/</id>
    <published>2017-07-13T09:14:14.000Z</published>
    <updated>2017-07-17T08:42:42.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今天在看&lt;a href=&quot;http://blog.sunnyxx.com/2014/10/15/behind-autorelease/&quot;&gt;黑幕背后的Autorelease&lt;/a&gt;这篇博客的时候，发现了一些问题。主要问题在于：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;objective-c&quot;&gt;// ARC 情况下
@autoreleasepool {
  id __strong array = [NSMutableArray array];
  NSLog(@&amp;quot;array count is %lu&amp;quot;, _objc_rootRetainCount(array));
  _objc_autoreleasePoolPrint();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;这里的array对象的retainCount到底是1还是2？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;按照查找的博客，以及之前看的《Objective-C高级编程 iOS与OS X多线程和内存管理》这本书的结论：这里的retainCount应该是1，因为这个对象没有注册到autoreleasepool中。但是实际运行下来却并非如此。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/45075336/ios-arc-objc-rootretaincount&quot;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>JSPatch源码分析</title>
    <link href="http://yoursite.com/2017/07/07/JSPatch-source-analyze/"/>
    <id>http://yoursite.com/2017/07/07/JSPatch-source-analyze/</id>
    <published>2017-07-07T01:26:28.000Z</published>
    <updated>2017-08-01T03:55:52.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/bang590/JSPatch&quot;&gt;JSPatch&lt;/a&gt;是一个可以动态更新iOS APP的开源库。通过JSPatch，可以使用JS书写原生代码，动态更新APP，替换项目原生代码修复Bug。&lt;/p&gt;
&lt;p&gt;JSPatch充分应用了Objective-C的runtime，来实现自己的功能。&lt;/p&gt;
&lt;p&gt;这篇文章将结合Demo，来分析JSPatch的主要的实现过程。包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用JS新建类&lt;/li&gt;
&lt;li&gt;使用JS替换原有方法&lt;/li&gt;
&lt;li&gt;使用JS添加全新方法&lt;/li&gt;
&lt;li&gt;OC调用JS定义的方法&lt;/li&gt;
&lt;li&gt;JS调用OC定义的方法&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>关于ARC，Block以及GCD，runloop</title>
    <link href="http://yoursite.com/2017/06/27/iOS-ARC-Block-GCD-Runloop/"/>
    <id>http://yoursite.com/2017/06/27/iOS-ARC-Block-GCD-Runloop/</id>
    <published>2017-06-27T11:51:42.000Z</published>
    <updated>2017-07-17T08:19:42.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近又看了一遍 &lt;strong&gt;Objective-C高级编程 iOS与OS X多线程和内存管理&lt;/strong&gt; 这本书。对一些问题有了一些新的认识。这篇文章将讲讲下面几个话题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;ARC，MRC 与 引用计数&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Block的实现&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GCD与runloop&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Objective-C runtime - 如果还有其他的话</title>
    <link href="http://yoursite.com/2017/06/10/objective-c-runtime-other/"/>
    <id>http://yoursite.com/2017/06/10/objective-c-runtime-other/</id>
    <published>2017-06-10T09:21:25.000Z</published>
    <updated>2017-07-17T08:38:22.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;系列应该是最后一篇：还真要来讲一点其他的东西：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;self &amp;amp;&amp;amp; super&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;alloc &amp;amp;&amp;amp; init&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Objective-C runtime - 应用和示例</title>
    <link href="http://yoursite.com/2017/06/10/objective-c-runtime-example/"/>
    <id>http://yoursite.com/2017/06/10/objective-c-runtime-example/</id>
    <published>2017-06-10T06:31:59.000Z</published>
    <updated>2017-08-16T02:34:41.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;系列第五篇：将展示几个runtime的例子以及runtime的实际应用。这些例子包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;动态&lt;strong&gt;添加属性&lt;/strong&gt;以及添加用来存储属性对应的实例变量的&lt;strong&gt;关联对象&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;方法决议：父类实现&lt;code&gt;resolveInstanceMethod&lt;/code&gt;，然后在子类中添加方法&lt;/li&gt;
&lt;li&gt;消息转发示例：&lt;ol&gt;
&lt;li&gt;&lt;code&gt;forwardingTargetForSelector&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;forwardInvocation&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;本文的demo代码可以在&lt;a href=&quot;https://github.com/vanney9/runtime&quot;&gt;我的github&lt;/a&gt;上找到&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Objective-C runtime - API</title>
    <link href="http://yoursite.com/2017/06/09/objective-c-runtime-api/"/>
    <id>http://yoursite.com/2017/06/09/objective-c-runtime-api/</id>
    <published>2017-06-09T02:03:44.000Z</published>
    <updated>2017-07-17T08:37:16.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;系列第四篇：前面3篇，主要从对象，属性，方法等方面分析了runtime的源码。这一篇，来看看runtime提供的API。这些API可以用来操作类，对象，属性，方法等等。了解了这些底层的实现，API的工作只是对这些底层操作做了个封装。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/objectivec/objective_c_runtime?language=objc&quot;&gt;官方runtimeAPI文档&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Objective-C runtime - 消息</title>
    <link href="http://yoursite.com/2017/06/08/objective-c-runtime-message/"/>
    <id>http://yoursite.com/2017/06/08/objective-c-runtime-message/</id>
    <published>2017-06-08T06:46:01.000Z</published>
    <updated>2017-07-31T03:31:24.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;系列第三篇：来看看OC的消息。包括&lt;strong&gt;方法查找、缓存、方法决议以及消息转发&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Objective-C runtime - 分类与关联对象</title>
    <link href="http://yoursite.com/2017/06/07/objective-c-runtime-category/"/>
    <id>http://yoursite.com/2017/06/07/objective-c-runtime-category/</id>
    <published>2017-06-07T06:34:21.000Z</published>
    <updated>2017-07-17T08:37:32.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;系列第三篇：深入分析OC中的分类 - &lt;strong&gt;Category&lt;/strong&gt; 以及在分类里面会涉及到了 &lt;strong&gt;关联对象&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Objective-C runtime - 属性与方法</title>
    <link href="http://yoursite.com/2017/06/05/objective-c-runtime-property-method/"/>
    <id>http://yoursite.com/2017/06/05/objective-c-runtime-property-method/</id>
    <published>2017-06-05T08:03:20.000Z</published>
    <updated>2017-07-31T03:11:21.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;系列第二篇：深入分析OC中的属性与方法的本质。通过上一篇&lt;a href=&quot;http://vanney9.com/2017/06/03/objective-c-runtime-class-object/&quot;&gt;Objective-C runtime - 类和对象&lt;/a&gt;，我们了解了objc_class中的 &lt;strong&gt;isa&lt;/strong&gt; 成员变量；在这篇文章中，则会详细介绍objc_class的另一成员变量 &lt;strong&gt;bits&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Objective-C runtime - 类和对象</title>
    <link href="http://yoursite.com/2017/06/03/objective-c-runtime-class-object/"/>
    <id>http://yoursite.com/2017/06/03/objective-c-runtime-class-object/</id>
    <published>2017-06-03T07:00:32.000Z</published>
    <updated>2017-08-16T01:52:53.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;OC是一门面向对象的语言，这篇文章先来看看OC的类和对象(&lt;strong&gt;Class &amp;amp;&amp;amp; Object&lt;/strong&gt;)&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Objective-C runtime - 系列开始</title>
    <link href="http://yoursite.com/2017/06/03/objective-c-runtime-summarize/"/>
    <id>http://yoursite.com/2017/06/03/objective-c-runtime-summarize/</id>
    <published>2017-06-03T02:14:50.000Z</published>
    <updated>2017-07-17T08:38:49.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;学习OC的runtime也有一段时间了，是时候写个runtime的系列来做个总结了。大体按照以下几个主题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://vanney9.com/2017/06/03/objective-c-runtime-class-object/&quot;&gt;Class &amp;amp;&amp;amp; Object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vanney9.com/2017/06/05/objective-c-runtime-property-method/&quot;&gt;Property &amp;amp;&amp;amp; Method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vanney9.com/2017/06/07/objective-c-runtime-category/&quot;&gt;Category &amp;amp;&amp;amp; Association Object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vanney9.com/2017/06/08/objective-c-runtime-message/&quot;&gt;Message&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vanney9.com/2017/06/09/objective-c-runtime-api/&quot;&gt;上层API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vanney9.com/2017/06/10/objective-c-runtime-example/&quot;&gt;runtime应用示例 &amp;amp;&amp;amp; 奇奇怪怪的例子&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vanney9.com/2017/06/10/objective-c-runtime-other/&quot;&gt;如果还有其他的话&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Effective Objective-C - 对象、消息、运行期</title>
    <link href="http://yoursite.com/2017/04/13/effective-objective-c-reading-note-six/"/>
    <id>http://yoursite.com/2017/04/13/effective-objective-c-reading-note-six/</id>
    <published>2017-04-13T12:59:20.000Z</published>
    <updated>2017-07-17T08:18:57.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Effective Objective-C 2.0&lt;/strong&gt; 系列读书笔记最后一篇&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Effective Objective-C - 系统框架</title>
    <link href="http://yoursite.com/2017/04/11/effective-objective-c-reading-note-five/"/>
    <id>http://yoursite.com/2017/04/11/effective-objective-c-reading-note-five/</id>
    <published>2017-04-11T12:42:29.000Z</published>
    <updated>2017-07-17T08:18:14.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;NSObject&lt;/strong&gt; 属于 &lt;strong&gt;Foundation&lt;/strong&gt; 框架，我们写的OC代码全部都是基于这些基本系统框架之上的&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Effective Objective-C - 块与大中枢派发</title>
    <link href="http://yoursite.com/2017/04/04/effective-objective-c-reading-note-four/"/>
    <id>http://yoursite.com/2017/04/04/effective-objective-c-reading-note-four/</id>
    <published>2017-04-04T07:43:55.000Z</published>
    <updated>2017-07-17T08:18:32.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Effective Objective C&lt;/strong&gt; 读书笔记 - 块与大中枢派发&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多线程的两大核心：block，GCD&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Auto Layout 与 CAKeyframeAnimation</title>
    <link href="http://yoursite.com/2017/03/30/iOS-Auto-Layout-CAKeyframeAnimation/"/>
    <id>http://yoursite.com/2017/03/30/iOS-Auto-Layout-CAKeyframeAnimation/</id>
    <published>2017-03-30T09:19:20.000Z</published>
    <updated>2017-07-17T08:19:57.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近实现了一个基于Auto Layout的CAKeyframeAnimation。先来看一下效果👇&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/lionheart/1703/animate.gif&quot; alt=&quot;animate.gif&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Effective Objective-C - 内存管理</title>
    <link href="http://yoursite.com/2017/03/25/effective-objective-c-reading-note-three/"/>
    <id>http://yoursite.com/2017/03/25/effective-objective-c-reading-note-three/</id>
    <published>2017-03-25T08:07:33.000Z</published>
    <updated>2017-07-17T08:19:11.000Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Effective Objective C&lt;/strong&gt; 读书笔记 - 内存管理&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
